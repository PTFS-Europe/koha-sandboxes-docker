---
-
  hosts: all
  become: true

  handlers:
    -
      name: "Restart apache"
      service: "name=apache2 state=restarted"
    -
      name: "Enable apache site"
      shell: a2ensite {{ KOHA_INSTANCE }}
      notify:
        - "Restart apache"
    -
      name: "Install koha git config"
      copy:
        dest: /usr/local/src/koha/.git/config
        mode: 365
        owner: root
        src: files/git/config
      notify:
        - "Update koha git repo"
    -
      name: "Update koha git repo"
      shell: "cd /usr/local/src/koha && yes | git fetch --all"
    -
      name: "Update koha git repo for sandbox"
      shell: "cd /usr/local/src/koha-sandboxes/{{ KOHA_INSTANCE }} && yes | git fetch --all"

  vars_files:
      - vars/defaults.yml
      - vars/user.yml
      - "{{ env_file }}"

  tasks:
    - debug:
        msg: "Using '{{ KOHA_INSTANCE }}' as instance name"

    - name: "Clone koha source to /usr/local/src/koha"
      git:
        repo: git://git.koha-community.org/koha.git
        dest: /usr/local/src/koha
        accept_hostkey: yes
        update: yes
      notify:
        - "Install koha git config"

    - name: "Copy source koha clone for sandbox"
      shell: "[ -d /usr/local/src/koha-sandboxes/{{ KOHA_INSTANCE }} ] || git clone -l -s --progress /usr/local/src/koha /usr/local/src/koha-sandboxes/{{ KOHA_INSTANCE }}"
      ignore_errors: yes

    - name: Create a new database for Koha instance
      mysql_db:
        name: "koha_{{ KOHA_INSTANCE }}"
        state: present
        login_host: 127.0.0.1
        login_port: 3306
        login_user: root
        login_password: password

    - mysql_user:
        name: "koha_{{ KOHA_INSTANCE }}"
        password: password
        priv: 'koha_{{ KOHA_INSTANCE }}.*:ALL'
        host: '%'
        state: present
        login_host: 127.0.0.1
        login_port: 3306
        login_user: root
        login_password: password

    - name: "Install koha git config for sandbox"
      copy:
        dest: /usr/local/src/koha-sandboxes/{{ KOHA_INSTANCE }}/.git/config
        mode: 365
        owner: root
        src: files/git/config
      notify:
        - "Update koha git repo for sandbox"

    - name: Start new koha-testing-docker container
      docker_container:
        name: "koha-{{ KOHA_INSTANCE }}"
        state: present
        image: koha/koha-testing:master
        pull: yes
        restart: yes
        restart_policy: always
        state: started
        privileged: yes
        networks:
          - name: kohanet
        published_ports:
          - 8080
          - 8081
        env:
            DB_HOSTNAME: "{{ DB_HOSTNAME }}"
            EDITOR: "{{ EDITOR }}"
            GIT_BZ_PASSWORD: "{{ GIT_BZ_PASSWORD }}"
            GIT_BZ_USER: "{{ GIT_BZ_USER }}"
            GIT_USER_EMAIL: "{{ GIT_USER_EMAIL }}"
            GIT_USER_NAME: "{{ GIT_USER_NAME }}"
            KOHA_CONF: "{{ KOHA_CONF }}"
            KOHA_DB_PASSWORD: "{{ KOHA_DB_PASSWORD }}"
            KOHA_DOMAIN: "{{ KOHA_DOMAIN }}"
            KOHA_INSTANCE: "{{ KOHA_INSTANCE }}"
            KOHA_INTRANET_PORT: "{{ KOHA_INTRANET_PORT }}"
            KOHA_INTRANET_PREFIX: "{{ KOHA_INTRANET_PREFIX }}"
            KOHA_INTRANET_SUFFIX: "{{ KOHA_INTRANET_SUFFIX }}"
            KOHA_MARC_FLAVOUR: "{{ KOHA_MARC_FLAVOUR }}"
            KOHA_OPAC_PORT: "{{ KOHA_OPAC_PORT }}"
            KOHA_OPAC_PREFIX: "{{ KOHA_OPAC_PREFIX }}"
            KOHA_OPAC_SUFFIX: "{{ KOHA_OPAC_SUFFIX }}"
            KOHA_PASS: "{{ KOHA_PASS }}"
            KOHA_PROVE_CPUS: "{{ KOHA_PROVE_CPUS }}"
            KOHA_USER: "{{ KOHA_USER }}"
            PERL5LIB: "{{ PERL5LIB }}"
            REMOTE_DEBUGGER_DIR: "{{ REMOTE_DEBUGGER_DIR }}"
            REMOTE_DEBUGGER_KEY: "{{ REMOTE_DEBUGGER_KEY }}"
            REMOTE_DEBUGGER_LOCATION: "{{ REMOTE_DEBUGGER_LOCATION }}"
            REMOTE_DEBUGGER_PACKAGE: "{{ REMOTE_DEBUGGER_PACKAGE }}"
            RUN_TESTS_AND_EXIT: "{{ RUN_TESTS_AND_EXIT }}"
        volumes:
          - /usr/local/src/koha-sandboxes/{{ KOHA_INSTANCE }}:/kohadevbox/koha
          - /usr/local/src/koha:/usr/local/src/koha

    - name: "Get host port for sandbox staff port"
      shell: docker port koha-{{ KOHA_INSTANCE }} | grep 8081 | rev | cut -d":" -f1 | rev
      register: docker_port_intranet
    - debug:
        msg: "Using '{{ docker_port_intranet.stdout }}' as staff port"
    - name: "Get host port for sandbox opac port"
      shell: docker port koha-{{ KOHA_INSTANCE }} | grep 8080 | rev | cut -d":" -f1 | rev
      register: docker_port_opac
    - debug:
        msg: "Using '{{ docker_port_opac.stdout }}' as opac port"

    - name: "Install apache config for sandbox instance"
      template:
        src: templates/sandbox_instance.conf.j2
        dest: /etc/apache2/sites-available/{{ KOHA_INSTANCE }}.conf
      notify: "Enable apache site"
