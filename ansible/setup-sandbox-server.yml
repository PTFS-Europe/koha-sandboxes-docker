---
-
  handlers:
    -
      name: "Restart apache"
      service: "name=apache2 state=restarted"
    -
      name: "Enable apache webapp site"
      shell: a2ensite webapp
      notify:
        - "Restart apache"
    -
      name: "Install koha git config"
      copy:
        dest: /usr/local/src/koha/.git/config
        mode: 365
        owner: root
        src: files/git/config
        update: yes
      notify:
        - "Update koha git repo"
    -
      name: "Update koha git repo"
      command: cd /usr/local/src/koha && yes | git fetch --all

  hosts: all
  become: true

  roles:
    - geerlingguy.pip
    - geerlingguy.docker

  tasks:
    - name: Install "git" package
      apt:
        name: git
#        update_cache: yes

  tasks:
    - name: Install "cpanminus" package
      apt:
        name: cpanminus

    - name: Install "default-libmysqlclient-dev" package, needed for pip package "MySQL-python"
      apt:
        name: default-libmysqlclient-dev

    - name: Install "mariadb-client" package to allow cli access to db container
      apt:
        name: mariadb-client

    - cpanm:
        name: Mojolicious::Commands

    - name: Install "apache2" package
      apt:
        name: apache2
    - name: Enable mod proxy for apache2
      apache2_module:
        state: present
        name: proxy
      notify:
        - "Restart apache"
    - name: Enable mod ssl for apache2
      apache2_module:
        state: present
        name: ssl
      notify:
        - "Restart apache"
    - name: Enable mod proxy_balancer for apache2
      apache2_module:
        state: present
        name: proxy_balancer
      notify:
        - "Restart apache"
    - name: Enable mod proxy_http for apache2
      apache2_module:
        state: present
        name: proxy_http
      notify:
        - "Restart apache"

    - name: "Clone koha source to /usr/local/src/koha"
      git:
        repo: git://git.koha-community.org/koha.git
        dest: /usr/local/src/koha
        accept_hostkey: yes
      notify: 
        - "Install koha git config"

    - name: "Clone koha-testing-docker source to /usr/local/src/koha-testing-docker"
      git:
        repo: https://gitlab.com/koha-community/koha-testing-docker.git
        dest: /usr/local/src/koha-testing-docker
        accept_hostkey: yes

    - name: "Increase vm.max_map_count"
      shell: "sysctl -w vm.max_map_count=262144"
    - name: "Test if vm.max_map_count is set permanently"
      shell: cat /etc/sysctl.conf | grep vm.max_map_count | wc -l
      register: test_max_map_count
    - name: "Increase vm.max_map_count permanently"
      shell: echo "vm.max_map_count=262144" >> /etc/sysctl.conf
      when: test_max_map_count.stdout == "0"

    - name: "Install apache config for webapp"
      template:
        src: templates/webapp.conf.j2
        dest: /etc/apache2/sites-available/webapp.conf
      notify: "Enable apache webapp site"

    - name: "Pull the latest docker images for koha-testing-docker"
      shell: docker pull koha/koha-testing:master

    - pip:
        name: docker
        state: present

    - pip:
        name: MySQL-python
        state: present

    - name: Create docker network kohanet
      docker_network:
          name: kohanet

    - name: Ensure MySQL database Docker container is running
      docker_container:
        name: db
        state: present
        image: mysql:5.5
        pull: yes
        restart: yes
        restart_policy: always
        state: started
        env:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_USER: koha
            MYSQL_PASSWORD: password
        published_ports: 3306:3306
        networks:
          - name: kohanet

    - name: Ensure Elastic Docker container is running
      docker_container:
        name: es
        state: present
        image: koha/elasticsearch-icu
        pull: yes
        restart: yes
        restart_policy: always
        state: started
        env:
            cluster.name: "docker-cluster"
            bootstrap.memory_lock: "true"
            xpack.security.enabled: "false"
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        ulimits:
            memlock:-1:-1
        networks:
          - name: kohanet

    - name: Ensure Memcache Docker container is running
      docker_container:
        name: memcached
        state: present
        image: memcached
        pull: yes
        restart: yes
        restart_policy: always
        state: started
        networks:
          - name: kohanet
