#!/usr/bin/perl

use 5.010;

use Modern::Perl;

use Getopt::Long;
use Data::Dumper;

my $site_name;
my $password;
my $gitify;
my $git_branch;
my $specialist;
my $description = q{};
my $notes       = q{};
my $type;
my $verbose;
my $help;
my $use_db = q{};
my $restore;

GetOptions(
    "s|site|site-name=s"    => \$site_name,
    "g|git|gitify"          => \$gitify,
    "b|branch|git-branch=s" => \$git_branch,
    "d|desc|description=s"  => \$description,
    "n|notes=s"             => \$notes,
    "u|user|specialist=s"   => \$specialist,
    "t|type=s"              => \$type,
    "r|restore=s"           => \$restore,

    "v|verbose" => \$verbose,
    "h|help"    => \$help,

    "use-db=s" => \$use_db,
);

if (   $help
    || !$site_name
    || !$description
    || !$specialist
    || !$type
    || !grep( /^$type$/, qw( dev demo test sandbox ) ) )
{
    say
"bywater-create -s site_name --gitify -b git_branch -u specialist -t [migration|opac|dev] -d description -n notes -v -r shortname";
    exit;
}

# Create the passwd file with the configuration for this site
say "Updating koha password file" if $verbose;
my $passwdfile = '/etc/koha/passwd';
open( my $fh, '>>', $passwdfile )
  or die "Could not open koha passwdfile '$passwdfile' $!";
say $fh "$site_name:koha_$site_name:password:koha_$site_name";
close $fh;

# Create the site
say "Running koha-create" if $verbose;
$use_db = "--use-db $use_db" if $use_db;
`koha-create --create-db $site_name $use_db`;

# Delete the password file. If we reuse the same name without this, it will cause problems
unlink $passwdfile;

if ($gitify) {
    say "Starting gitification" if $verbose;

    my $koha_site_var = "/var/lib/koha/$site_name";
    my $kohaclone     = "$koha_site_var/kohaclone";

    # Copy the default kohaclone to the site directory
    say "Cloning default kohaclone to $kohaclone" if $verbose;
    `git clone -l -s --progress /usr/local/src/koha $kohaclone`;
    say "CLONE: $kohaclone";
    say "Adding remote 'community'" if $verbose;
    `cd $kohaclone && git remote add community git://git.koha-community.org/koha.git`;
    say "Adding remote 'bws-production'" if $verbose;
    `cd $kohaclone && git remote add bws-production https://github.com/bywatersolutions/bywater-koha.git`;
    say "Adding remote 'bws-devel'" if $verbose;
    `cd $kohaclone && git remote add bws-devel https://github.com/bywatersolutions/bywater-koha-devel.git`;
    say "Fetching remotes" if $verbose;
    `cd $kohaclone && git fetch --all`;

#    say "Symlinking master config to $kohaclone/.git/config" if $verbose;
#    `rm $kohaclone/.git/config`;
#    `ln -s /home/koha/kohaclone/.git/config $kohaclone/.git/config`;

    # Gitify the site
    say "Running koha-gitify" if $verbose;
    `/usr/local/src/koha-gitify $site_name $kohaclone`;

    # Checkout the given branch if supplied, else master
    if ( $git_branch ) {
        say "Checking out $git_branch" if $verbose;
        `cd $kohaclone && git checkout $git_branch -b $git_branch`;
    } else {
        say "Checking out community/master" if $verbose;
        `cd $kohaclone && git checkout community/master -b master`;
    }

    # Koha git clone needs to be owed by that koha instance user
    # or we won't be able to make edits to it
    say "Changing kohclone owner to $site_name" if $verbose;
    `chown -R $site_name-koha.$site_name-koha $kohaclone`;
}

say "Adding comment tags to apache config" if $verbose;
my $apache_config = '/etc/apache2/sites-enabled/' . $site_name . '.conf';
open( $fh, '>>', $apache_config );
say $fh "#Specialist:$specialist";
say $fh q{};
say $fh "#Notes:$notes";
say $fh q{};
say $fh "#Description:$description";
say $fh q{};
say $fh "#Type:$type";
close $fh;

# make the config readable by all
`chmod +r $apache_config`;

# Restart apache
say 'Reloading Apache' if $verbose;
`service apache2 reload`;

# Create a new file in sudoers.d
say "Creating sudoer file for $site_name" if $verbose;
my $sudoer_file = "/etc/sudoers.d/$site_name-koha";
open( $fh, '>', $sudoer_file );
print $fh "$site_name-koha    ALL= NOPASSWD: ALL\n";
close $fh;
chmod( 0440, $sudoer_file );

if ($restore) {
    say "Restoring backup for shortname $restore" if $verbose;
    my $v = '-v' if $verbose;
    `bywater-restore -k $restore $verbose`;
}

